-- CREATE TABLE IF NOT EXISTS products (
--    product_id INTEGER PRIMARY KEY AUTOINCREMENT,
--    name TEXT NOT NULL,
--    category TEXT NOT NULL,
--    price REAL NOT NULL
--);
--CREATE TABLE IF NOT EXISTS customers ( customer_id INTEGER PRIMARY KEY, 
--first_name TEXT NOT NULL, 
--last_name TEXT NOT NULL, 
--email TEXT NOT NULL UNIQUE );
--CREATE TABLE IF NOT EXISTS orders ( order_id INTEGER PRIMARY KEY, 
--customer_id INTEGER NOT NULL, 
--product_id INTEGER NOT NULL, 
--quantity INTEGER NOT NULL, 
--order_date DATE NOT NULL, 
--FOREIGN KEY (customer_id) REFERENCES customers(customer_id), 
--FOREIGN KEY (product_id) REFERENCES products(product_id) );
--INSERT INTO products (name, category, price) VALUES
--("ASUS TUF Gaming F17", "Ноутбуки", 42000),
--("iPhone 16 Pro Max", "Телефони", 70000),
--("Lenovo Legion Pro 5", "Ноутбуки", 107000),
--("Lenovo Tab P12", "Планшети", 15000);
--INSERT INTO customers (first_name, last_name, email) VALUES
--("Osadchyk", "Andrew", "bildhw739@gmal.com"),
--("Dmytro", "Homenko", "syag314@gmal.com"),
--("Bilous", "Oleksandr", "bilsss032518@gmal.com");
--INSERT INTO orders (customer_id, product_id, quantity, order_date) VALUES 
--(1, 3, 1, "2025-01-25"),
--(2, 3, 1, "2025-01-25"),
--(3, 3, 1, "2025-01-25");
--SELECT sum(quantity) FROM orders
--SELECT products.product_id, products.name, sum(orders.quantity)
--FROM products INNER JOIN orders
--ON products.product_id = orders.product_id
--GROUP BY products.name;
SELECT orders.order_id, products.name, products.price, sum(orders.quantity), sum(orders.quantity) * products.price as total_price
FROM products INNER JOIN orders
ON products.product_id = orders.product_id
GROUP BY products.product_id
ORDER BY name;
SELECT total_q FROM (
SELECT products.category, sum(orders.quantity) as total_q
FROM products JOIN orders
ON products.product_id = orders.product_id
GROUP BY products.category );
SELECT price, category 
FROM products
WHERE category = "Ноутбуки";
UPDATE products SET price = price*1.1;
SELECT * FROM products;